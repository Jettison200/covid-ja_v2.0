{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/api.js","components/CountryPicker/CountryPicker.jsx","components/Chart/Chart.jsx","App.js","index.js","app.module.css","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css","images/virus.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","confimed","total","date","reportDate","fetchCountries","countries","name","CountryPicker","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchAPI","FormControl","fromControl","NativeSelect","defaultValue","onChange","e","target","i","key","Chart","setDailyData","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","RaectDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee6a4f08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3QZOW\",\"card\":\"Cards_card__2M-CZ\",\"infected\":\"Cards_infected__1nLIt\",\"recovered\":\"Cards_recovered__2_nkb\",\"deaths\":\"Cards_deaths__3p1IQ\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid, StylesProvider} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport cx from 'classnames'\r\nimport CountUp from 'react-countup';\r\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed) {\r\n        return 'Loading...'\r\n    }\r\n\r\n    return(\r\n    <div className={styles.container}>\r\n       <Grid container spacing={3} justify=\"center\">\r\n           <Grid item component={Card} xs ={12} md = {3} className={cx(styles.card, styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={confirmed.value} duration={2.2} separator={','}/>\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date (lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of active cases of covid-19</Typography>\r\n                    \r\n                </CardContent>\r\n           </Grid>\r\n\r\n           <Grid item component={Card} xs ={12} md = {3} className={cx(styles.card, styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={recovered.value} duration={2.2} separator={','}/>\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date (lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number recoveries from covid-19</Typography>\r\n                    \r\n                </CardContent>\r\n           </Grid>\r\n\r\n           <Grid item component={Card} xs ={12} md = {3} className={cx(styles.card, styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start={0} end={deaths.value} duration={2.2} separator={','}/>\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date (lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of deaths caused by covid-19</Typography>\r\n                    \r\n                </CardContent>\r\n           </Grid>\r\n       </Grid>\r\n    </div>\r\n    )\r\n   \r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let changableUrl = url;\r\n\r\n    if(country) {\r\n        changableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try{\r\n        const {data: {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changableUrl)\r\n\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n    } catch (error){\r\n        console.log(error);\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`)\r\n\r\n       const modifiedData = data.map((dailyData) => ({\r\n           confimed: dailyData.confimed.total,\r\n           deaths: dailyData.deaths.total,\r\n           date: dailyData.reportDate,\r\n       }))\r\n       return modifiedData;\r\n    } catch (error){\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const {data: { countries }} = await axios.get(`${url}/countries`)\r\n\r\n        return countries.map((country) => country.name)\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n// export const fetchDailyData = async () => {\r\n//     try{\r\n//     const {data} = await axios.get(`${url}/daily`);\r\n\r\n//       const modifiedData = data.map((dailyData) => ({\r\n//           confimed: dailyData.confimed.total,\r\n//           deaths: dailyData.deaths.total,\r\n//           date: dailyData.reportDate,\r\n//       }));\r\n     \r\n      \r\n//       return modifiedData;\r\n//     } catch (error) {\r\n\r\n//     }\r\n// }","import React,{useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core'\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api/api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([])\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n    \r\n    return(\r\n    <div>\r\n       <FormControl className={styles.fromControl}>\r\n           <NativeSelect defaultValue=\"\" onChange={(e) => {handleCountryChange(e.target.value)}}>\r\n               <option value=\"\">Global</option>\r\n    {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n           </NativeSelect>\r\n       </FormControl>\r\n    </div>\r\n    )\r\n   \r\n}\r\n\r\nexport default CountryPicker;","import React,{useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api/api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData (await fetchDailyData());\r\n    }\r\n\r\n    \r\n    fetchAPI();\r\n  }, []);\r\n\r\n\r\n  const lineChart = (\r\n    dailyData ? \r\n   ( <Line\r\n    data={{\r\n      labels:dailyData.map(( { date } ) => date),\r\n      datasets:[{\r\n        data: dailyData.map(( { confirmed }) => confirmed),\r\n        label: \"Infected\",\r\n        borderColor: '#3333ff',\r\n        fill: true\r\n      }, {\r\n        data: dailyData.map(( { deaths }) => deaths),\r\n        label: \"Deaths\",\r\n        borderColor: 'red',\r\n        backgroundColor: 'rbga(255, 0, 0, 0.5)',\r\n        fill: true\r\n        }],\r\n       }}\r\n      />) \r\n      : null\r\n  );\r\n\r\n  const barChart = (\r\n    confirmed\r\n    ?(<Bar\r\n         data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [{\r\n            label:'Peaple',\r\n            backgroundColor:['rgba(0,0,255,.5)',\r\n                             'rgba(0,255,0,.5)',\r\n                             'rgba(255,0,0,.5)'\r\n                            ],\r\n                  data:[confirmed.value, recovered.value, deaths.value]\r\n          }]\r\n         }}\r\n\r\n         options={{\r\n           legend:{display:false},\r\n           title: {display:true, text: `Current state in ${country}`}\r\n         }}\r\n         />)\r\n    : null\r\n  )\r\n\r\n  return(\r\n    <div className={styles.container}>\r\n     {country ? barChart : barChart}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport  styles from './app.module.css';\r\n\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport {fetchData} from './api/api';\r\nimport coronaImage from './images/virus.png'\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data: {},\r\n        country: ''\r\n    }\r\ns\r\n   async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data: fetchedData})\r\n        // console.log(fetchedData);\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country)\r\n        console.log(fetchedData)\r\n        console.log(country);\r\n        this.setState({data: fetchedData, country : country})\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt='Covid-19'/>\r\n               <Cards data = {data}/>\r\n               <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n               <Chart data={data} country={country}/>\r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport RaectDom from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nRaectDom.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__1amfu\",\"image\":\"app_image__2KNSV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__20rZ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2j1s9\"};","module.exports = __webpack_public_path__ + \"static/media/virus.d7265326.png\";"],"sourceRoot":""}